-- Tạo database,
DROP DATABASE IF EXISTS Testingsystem2;
CREATE DATABASE Testingsystem2;
USE Testingsystem2;
-- Tạo bảng 
DROP TABLE IF EXISTS Department ;
CREATE TABLE Department (
    DepartmentID		SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    DepartmentName		NVARCHAR(30) NOT NULL UNIQUE KEY CHECK (length(DepartmentName)>=4)
);
DROP TABLE IF EXISTS `position` ;
CREATE TABLE `position` (
	PositionID 		SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY , 
    PositionName 	ENUM('Dev','Test','Scrum Master','PM') NOT NULL UNIQUE KEY
);
DROP TABLE IF EXISTS `Account` ;
CREATE TABLE  `Account` (
	AccountID				SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    Email					VARCHAR(50) NOT NULL UNIQUE KEY,
    Username				NVARCHAR(50) NOT NULL CHECK (length(Username)>=6),
    FullName				NVARCHAR(50) NOT NULL,
    DepartmentID			SMALLINT UNSIGNED NOT NULL,
    PositionID				SMALLINT UNSIGNED NOT NULL,
    CreateDate    			DATETIME  DEFAULT NOW(),
    FOREIGN KEY (DepartmentID) REFERENCES Department (DepartmentID),
    FOREIGN KEY (PositionID)	REFERENCES `position`(PositionID)
);
DROP TABLE IF EXISTS `Group`  ;
CREATE TABLE `Group` (
	GroupID 		SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY ,
    GroupName 		NVARCHAR(50) NOT NULL UNIQUE KEY CHECK (length(GroupName)>=3),
    CreatorID		SMALLINT UNSIGNED NOT NULL,
    CreateDate		DATETIME DEFAULT NOW()
    
);
DROP TABLE IF EXISTS GroupAccount ;
CREATE TABLE GroupAccount (
	GroupID 		SMALLINT UNSIGNED NOT NULL UNIQUE KEY,
    AccountID 		SMALLINT NOT NULL UNIQUE KEY  ,
    JoinDate		DATETIME DEFAULT NOW(),
    PRIMARY KEY (GroupID,AccountID)
);
DROP TABLE IF EXISTS TypeQuestion ;
CREATE TABLE TypeQuestion (
	TypeID		SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY ,
    TypeName	ENUM('Essay','Multiple-choice') NOT NULL UNIQUE KEY 
);
DROP TABLE IF EXISTS CategoryQuestion ;
CREATE TABLE CategoryQuestion (
	CategoryID 		SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY ,
    CategoryName 	NVARCHAR(30) NOT NULL UNIQUE KEY 
);
DROP TABLE IF EXISTS Question ;
CREATE TABLE Question (
	QuestionID 		SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    Content 		NVARCHAR(100) NOT NULL,
    CategoryID		SMALLINT UNSIGNED NOT NULL ,
    TypeID		 	SMALLINT UNSIGNED NOT NULL,
    CreatorID		SMALLINT UNSIGNED NOT NULL UNIQUE KEY,
    CreateDate		DATETIME DEFAULT NOW(),
    FOREIGN KEY (CategoryID) REFERENCES CategoryQuestion (CategoryID),
    FOREIGN KEY (TypeID) 	 REFERENCES TypeQuestion (TypeID),
    FOREIGN KEY (CreatorID)  REFERENCES `Account` (AccountID)
);
DROP TABLE IF EXISTS Answer ;
CREATE TABLE Answer (
	AnswerID 		SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    Content 		VARCHAR(100) NOT NULL,
    QuestionID		SMALLINT UNSIGNED NOT NULL,
    isCorrect		BIT NOT NULL,
    FOREIGN KEY (QuestionID) REFERENCES Question (QuestionID)
);
DROP TABLE IF EXISTS Exam ;
CREATE TABLE Exam (
	 ExamID			SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    `Code` 			CHAR(15) NOT NULL ,
    Title			NVARCHAR(50) ,
    CategoryID		SMALLINT UNSIGNED NOT NULL,
    Duration		DATETIME DEFAULT NOW(),
    CreatorID		SMALLINT UNSIGNED NOT NULL,
    CreateDate		DATETIME DEFAULT NOW(),
    FOREIGN KEY (CategoryID) REFERENCES CategoryQuestion (CategoryID),
    FOREIGN KEY (CreatorID) REFERENCES `Account` (AccountID)
);
DROP TABLE IF EXISTS ExamQuestion ;
CREATE TABLE ExamQuestion (
	ExamID 			SMALLINT UNSIGNED NOT NULL,
    QuestionID 		SMALLINT UNSIGNED NOT NULL,
    PRIMARY KEY (ExamID,QuestionID),
    FOREIGN KEY (ExamID) REFERENCES Exam (ExamID),
    FOREIGN KEY (QuestionID) REFERENCES Question (QuestionID)
);
